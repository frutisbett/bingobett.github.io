// üîß –£–ª—É—á—à–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–µ—à–µ–º –¥–ª—è Telegram Mini App
// –≠—Ç–æ—Ç –∫–æ–¥ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –∫–µ—à–∞ –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂—É—é –≤–µ—Ä—Å–∏—é

(function() {
    'use strict';
    
    console.log('üîÑ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–µ—à–∞ –¥–ª—è Telegram...');
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    const CACHE_VERSION = Date.now().toString(36) + Math.random().toString(36).substr(2);
    const TELEGRAM_DOMAINS = ['telegram.org', 't.me', 'telegram-web-app'];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –≤ Telegram Web App
    const isTelegramApp = window.Telegram && window.Telegram.WebApp;
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏ –∫ URL —Ä–µ—Å—É—Ä—Å–æ–≤
    function addCacheBuster(url) {
        if (!url) return url;
        
        // –ù–µ –¥–æ–±–∞–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é –∫ Telegram —Ä–µ—Å—É—Ä—Å–∞–º
        const isTelegramResource = TELEGRAM_DOMAINS.some(domain => url.includes(domain));
        if (isTelegramResource) return url;
        
        if (url.includes('?')) {
            return url + '&v=' + CACHE_VERSION;
        } else {
            return url + '?v=' + CACHE_VERSION;
        }
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö CSS —Ñ–∞–π–ª–æ–≤
    function updateCSSLinks() {
        const links = document.querySelectorAll('link[rel="stylesheet"]');
        links.forEach(link => {
            if (link.href) {
                const newHref = addCacheBuster(link.href);
                if (newHref !== link.href) {
                    link.href = newHref;
                    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω CSS:', link.href);
                }
            }
        });
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö JS —Ñ–∞–π–ª–æ–≤
    function updateScriptSources() {
        const scripts = document.querySelectorAll('script[src]');
        scripts.forEach(script => {
            if (script.src) {
                const newSrc = addCacheBuster(script.src);
                if (newSrc !== script.src) {
                    script.src = newSrc;
                    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω JS:', script.src);
                }
            }
        });
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    function updateImageSources() {
        const images = document.querySelectorAll('img');
        images.forEach(img => {
            if (img.src) {
                const newSrc = addCacheBuster(img.src);
                if (newSrc !== img.src) {
                    img.src = newSrc;
                    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', img.src);
                }
            }
        });
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ–Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    function updateBackgroundImages() {
        const elements = document.querySelectorAll('*');
        elements.forEach(el => {
            const style = window.getComputedStyle(el);
            const bgImage = style.backgroundImage;
            
            if (bgImage && bgImage !== 'none' && bgImage.includes('url')) {
                const urlMatch = bgImage.match(/url\(["']?(.*?)["']?\)/);
                if (urlMatch && urlMatch[1]) {
                    const newUrl = addCacheBuster(urlMatch[1]);
                    if (newUrl !== urlMatch[1]) {
                        el.style.backgroundImage = `url("${newUrl}")`;
                        console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', newUrl);
                    }
                }
            }
        });
    }
    
    // –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    function clearCache() {
        console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞...');
        
        // –û—á–∏—Å—Ç–∫–∞ localStorage
        const keysToKeep = ['telegram_user_data', 'game_settings', 'user_preferences'];
        for (let i = 0; i < localStorage.length; i++) {
            const key = localStorage.key(i);
            if (!keysToKeep.includes(key)) {
                localStorage.removeItem(key);
            }
        }
        
        // –û—á–∏—Å—Ç–∫–∞ sessionStorage
        sessionStorage.clear();
        
        // –û—á–∏—Å—Ç–∫–∞ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–≥–æ –∫–µ—à–∞
        if ('caches' in window) {
            caches.keys().then(cacheNames => {
                cacheNames.forEach(cacheName => {
                    if (!cacheName.includes('telegram')) {
                        caches.delete(cacheName);
                        console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω –∫–µ—à:', cacheName);
                    }
                });
            }).catch(err => {
                console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞:', err);
            });
        }
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
    function setupNoCacheHeaders() {
        console.log('üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ no-cache...');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
        const metaTags = [
            { name: 'cache-control', content: 'no-cache, no-store, must-revalidate' },
            { name: 'pragma', content: 'no-cache' },
            { name: 'expires', content: '0' }
        ];
        
        metaTags.forEach(tag => {
            const meta = document.createElement('meta');
            meta.name = tag.name;
            meta.content = tag.content;
            document.head.appendChild(meta);
        });
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ —Å—Ç–∞—Ä–æ–π –≤–µ—Ä—Å–∏–∏
    function checkForStaleCache() {
        const lastLoadTime = localStorage.getItem('last_load_time');
        const currentTime = Date.now();
        
        if (lastLoadTime && (currentTime - parseInt(lastLoadTime)) > 3600000) { // 1 —á–∞—Å
            console.log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å—Ç–∞—Ä—ã–π –∫–µ—à, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...');
            forceReload();
        }
        
        localStorage.setItem('last_load_time', currentTime.toString());
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    function init() {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–µ—à–∞...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å—Ç–∞—Ä—ã–π –∫–µ—à
        checkForStaleCache();
        
        // –û—á–∏—â–∞–µ–º –∫–µ—à –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        clearCache();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        setupNoCacheHeaders();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Ä–µ—Å—É—Ä—Å—ã —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ DOM
        setTimeout(() => {
            updateCSSLinks();
            updateScriptSources();
            updateImageSources();
            updateBackgroundImages();
        }, 500);
        
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–µ—à–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
        console.log('üìä –í–µ—Ä—Å–∏—è –∫–µ—à–∞:', CACHE_VERSION);
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        setTimeout(init, 100); // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
    }
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
    window.forceReload = function() {
        console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...');
        window.location.href = window.location.pathname + '?v=' + Date.now();
    };
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞ –≤—Ä—É—á–Ω—É—é
    window.clearGameCache = function() {
        clearCache();
        console.log('‚úÖ –ö–µ—à –æ—á–∏—â–µ–Ω –≤—Ä—É—á–Ω—É—é');
    };
    
    // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
    window.TelegramCacheFix = {
        forceReload: window.forceReload,
        clearCache: window.clearGameCache,
        getCacheVersion: () => CACHE_VERSION
    };
    
})();
