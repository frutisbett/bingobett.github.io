name: üé∞ BingoBett Auto Deploy & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: üß™ Test Game
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
      
      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: üß™ Test HTML validity
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ HTML —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞..."
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É HTML
          if grep -q "<!DOCTYPE html>" index.html; then
            echo "‚úÖ DOCTYPE –Ω–∞–π–¥–µ–Ω"
          else
            echo "‚ùå DOCTYPE –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
            exit 1
          fi
          
          if grep -q "<html" index.html; then
            echo "‚úÖ HTML —Ç–µ–≥ –Ω–∞–π–¥–µ–Ω"
          else
            echo "‚ùå HTML —Ç–µ–≥ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
            exit 1
          fi
          
      - name: üéÆ Test JavaScript functions
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏–≥—Ä—ã..."
          node -e "
            const fs = require('fs');
            const content = fs.readFileSync('index.html', 'utf8');
            
            const requiredFunctions = [
              'initiatePayment',
              'startCoinRainGame', 
              'startMiniGame',
              'spin',
              'updateBalance'
            ];
            
            let allFound = true;
            requiredFunctions.forEach(func => {
              if (content.includes('function ' + func)) {
                console.log('‚úÖ –§—É–Ω–∫—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞:', func);
              } else {
                console.log('‚ùå –§—É–Ω–∫—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç:', func);
                allFound = false;
              }
            });
            
            if (!allFound) {
              process.exit(1);
            }
            
            console.log('üéâ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω—ã!');
          "
          
      - name: üí∞ Test payment system
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã..."
          node -e "
            const fs = require('fs');
            const content = fs.readFileSync('index.html', 'utf8');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—à–µ–ª–µ–∫ –ÆMoney
            if (content.includes('4100118182998706')) {
              console.log('‚úÖ –ö–æ—à–µ–ª–µ–∫ –ÆMoney –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
            } else {
              console.log('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –ÆMoney');
              process.exit(1);
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ successURL
            if (content.includes('successURL')) {
              console.log('‚úÖ successURL –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
            } else {
              console.log('‚ùå successURL –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
              process.exit(1);
            }
          "
          
      - name: üé® Test colors
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∂–µ–ª—Ç—ã—Ö —Ü–≤–µ—Ç–æ–≤..."
          node -e "
            const fs = require('fs');
            const content = fs.readFileSync('index.html', 'utf8');
            
            const yellowCount = (content.match(/#ffd700/g) || []).length;
            console.log('üé® –ù–∞–π–¥–µ–Ω–æ –∂–µ–ª—Ç—ã—Ö —Ü–≤–µ—Ç–æ–≤:', yellowCount);
            
            if (yellowCount >= 5) {
              console.log('‚úÖ –ñ–µ–ª—Ç—ã–µ —Ü–≤–µ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
            } else {
              console.log('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∂–µ–ª—Ç—ã—Ö —Ü–≤–µ—Ç–æ–≤');
              process.exit(1);
            }
          "
          
      - name: üéÆ Test mini-games
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏-–∏–≥—Ä..."
          node -e "
            const fs = require('fs');
            const content = fs.readFileSync('index.html', 'utf8');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–Ω—Å –º–∏–Ω–∏-–∏–≥—Ä (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 25%)
            if (content.includes('Math.random() < 0.25')) {
              console.log('‚úÖ –®–∞–Ω—Å –º–∏–Ω–∏-–∏–≥—Ä: 25%');
            } else {
              console.log('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —à–∞–Ω—Å –º–∏–Ω–∏-–∏–≥—Ä');
              process.exit(1);
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–æ–∂–¥—è –º–æ–Ω–µ—Ç
            if (content.includes('startCoinRainGame')) {
              console.log('‚úÖ –ú–∏–Ω–∏-–∏–≥—Ä–∞ \"–î–æ–∂–¥—å –º–æ–Ω–µ—Ç\" –Ω–∞–π–¥–µ–Ω–∞');
            } else {
              console.log('‚ùå –ú–∏–Ω–∏-–∏–≥—Ä–∞ \"–î–æ–∂–¥—å –º–æ–Ω–µ—Ç\" –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
              process.exit(1);
            }
          "

  deploy:
    name: üöÄ Deploy to GitHub Pages
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        
      - name: üìä Generate build info
        run: |
          echo "üîç –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–±–æ—Ä–∫–µ..."
          cat > build-info.json << EOF
          {
            "buildTime": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "commit": "${{ github.sha }}",
            "branch": "${{ github.ref_name }}",
            "version": "$(date +%Y.%m.%d.%H%M)",
            "deployer": "${{ github.actor }}"
          }
          EOF
          
          echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–±–æ—Ä–∫–µ:"
          cat build-info.json
        
      - name: üîß Setup Pages
        uses: actions/configure-pages@v4
        
      - name: üì¶ Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: üöÄ Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  notify:
    name: üì¨ Send notifications
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
      - name: üì¨ Notify Telegram on success
        if: needs.deploy.result == 'success'
        run: |
          if [ -n "${{ secrets.TELEGRAM_BOT_TOKEN }}" ] && [ -n "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -H "Content-Type: application/json" \
              -d '{
                "chat_id": "${{ secrets.TELEGRAM_CHAT_ID }}",
                "text": "üé∞ *BingoBett —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!*\n\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã\nüöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ\nüîó [–û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É](https://frutisbett.github.io/bingobett.github.io)\n\nüìã –ö–æ–º–º–∏—Ç: `${{ github.sha }}`\nüë§ –ê–≤—Ç–æ—Ä: ${{ github.actor }}",
                "parse_mode": "Markdown"
              }'
            echo "‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
          else
            echo "‚ö†Ô∏è Telegram —Ç–æ–∫–µ–Ω—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
          fi
          
      - name: üì¨ Notify Telegram on failure
        if: needs.test.result == 'failure' || needs.deploy.result == 'failure'
        run: |
          if [ -n "${{ secrets.TELEGRAM_BOT_TOKEN }}" ] && [ -n "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -H "Content-Type: application/json" \
              -d '{
                "chat_id": "${{ secrets.TELEGRAM_CHAT_ID }}",
                "text": "‚ùå *–û—à–∏–±–∫–∞ –≤ BingoBett!*\n\nüö´ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ\nüîó [–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—à–∏–±–∫–∏](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\nüìã –ö–æ–º–º–∏—Ç: `${{ github.sha }}`\nüë§ –ê–≤—Ç–æ—Ä: ${{ github.actor }}",
                "parse_mode": "Markdown"
              }'
            echo "üö® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
          fi